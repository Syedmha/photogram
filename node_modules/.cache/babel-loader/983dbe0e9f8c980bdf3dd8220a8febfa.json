{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\n\nconst useStorage = file => {\n  _s();\n\n  console.log(file.name);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // References\n    const storageRef = projectStorage.ref('images'); // this is async  .ref(\"child/path\")\n\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","console","log","name","progress","setProgress","error","setError","url","setUrl","storageRef","ref","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAGA,MAAMC,UAAU,GAAIC,IAAD,IAAS;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAG,MAAM;AACd;AACA,UAAMa,UAAU,GAAGZ,cAAc,CAACa,GAAf,CAAmB,QAAnB,CAAnB,CAFc,CAId;;AACAD,IAAAA,UAAU,CAACE,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAZ,MAAAA,WAAW,CAACU,UAAD,CAAX;AACH,KAHD,EAGIG,GAAD,IAAS;AACRX,MAAAA,QAAQ,CAACW,GAAD,CAAR;AACH,KALD,EAKG,YAAY;AACX,YAAMV,GAAG,GAAG,MAAME,UAAU,CAACS,cAAX,EAAlB;AACAV,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KARD;AASH,GAdQ,EAcN,CAACR,IAAD,CAdM,CAAT;AAgBA,SAAO;AAAEI,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CAvBD;;GAAMP,U;;AAyBN,eAAeA,UAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport {projectStorage} from '../firebase/config';\n\n\nconst useStorage = (file)=> {\n    console.log(file.name);\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect ( () => {\n        // References\n        const storageRef = projectStorage.ref('images');\n        \n        // this is async  .ref(\"child/path\")\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            setUrl(url);\n        })\n    }, [file]);\n\n    return { progress, url, error }\n}\n\nexport default useStorage;  \n"]},"metadata":{},"sourceType":"module"}