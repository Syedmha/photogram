{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSate, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\nimport React from 'react';\n\nconst useStorage = file => {\n  _s();\n\n  const [progess, setProgess] = useState(0);\n  const [error, setError] = useSate(null);\n  const [url, setUrl] = useSate(null);\n  useEffect = () => {\n    const storagRef = projectStorage.ref(file.name); //this is async\n\n    storagRef.put(file).on('state_change', snap => {\n      const percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgess(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadUrl();\n      setUrl(url);\n    });\n  }, [file];\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"evl/BZnp0Vl9l5LnIqm0Q4rmimM=\", false, function () {\n  return [useSate, useSate];\n});\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/firegram/src/hooks/useStorage.js"],"names":["useSate","useEffect","projectStorage","React","useStorage","file","progess","setProgess","useState","error","setError","url","setUrl","storagRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","storageRef","getDownloadUrl","progress"],"mappings":";;AAAA,SAAQA,OAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,OAAO,CAAC,IAAD,CAAjC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,OAAO,CAAC,IAAD,CAA7B;AAEAC,EAAAA,SAAS,GAAG,MAAM;AACd,UAAMY,SAAS,GAAEX,cAAc,CAACY,GAAf,CAAmBT,IAAI,CAACU,IAAxB,CAAjB,CADc,CAGd;;AACAF,IAAAA,SAAS,CAACG,GAAV,CAAcX,IAAd,EAAoBY,EAApB,CAAuB,cAAvB,EAAwCC,IAAD,IAAU;AAC7C,YAAMC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAuBF,IAAI,CAACG,UAA7B,GAA0C,GAA7D;AACAd,MAAAA,UAAU,CAACY,UAAD,CAAV;AACH,KAHD,EAGIG,GAAD,IAAS;AACRZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACH,KALD,EAKG,YAAY;AACX,YAAMX,GAAG,GAAG,MAAMY,UAAU,CAACC,cAAX,EAAlB;AACAZ,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KARD;AASH,GAbD,EAaG,CAACN,IAAD,CAbH;AAeA,SAAO;AAAEoB,IAAAA,QAAF;AAAYd,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CArBD;;GAAML,U;UAEwBJ,O,EACJA,O;;;AAoB1B,eAAeI,UAAf","sourcesContent":["import {useSate, useEffect} from 'react';\nimport {projectStorage} from '../firebase/config';\nimport React from 'react';\n\nconst useStorage = (file)=> {\n    const [progess, setProgess] = useState(0);\n    const [error, setError] = useSate(null);\n    const [url, setUrl] = useSate(null);\n\n    useEffect = () => {\n        const storagRef= projectStorage.ref(file.name);\n        \n        //this is async\n        storagRef.put(file).on('state_change', (snap) => {\n            const percentage = (snap.bytesTransferred/ snap.totalBytes) *100;\n            setProgess(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadUrl();\n            setUrl(url);\n        })\n    }, [file];\n\n    return { progress, url, error}\n}\n\nexport default useStorage;  \n"]},"metadata":{},"sourceType":"module"}