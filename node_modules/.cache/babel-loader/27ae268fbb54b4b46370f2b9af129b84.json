{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgess] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name); //this is async\n\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgess(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadUrl();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"W6joOg8mjXsO/70y208S6JgchFA=\");\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgess","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadUrl"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAGA,MAAMC,UAAU,GAAIC,IAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBN,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAG,MAAM;AACd,UAAMU,UAAU,GAAET,cAAc,CAACU,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAlB,CADc,CAGd;;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,UAAU,CAACW,UAAD,CAAV;AACH,KAHD,EAGIG,GAAD,IAAS;AACRZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACH,KALD,EAKG,YAAY;AACX,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KARD;AASH,GAbQ,EAaN,CAACL,IAAD,CAbM,CAAT;AAeA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CArBD;;GAAMJ,U;;AAuBN,eAAeA,UAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport {projectStorage} from '../firebase/config';\n\n\nconst useStorage = (file)=> {\n    const [progress, setProgess] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect ( () => {\n        const storageRef= projectStorage.ref(file.name);\n        \n        //this is async\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgess(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadUrl();\n            setUrl(url);\n        })\n    }, [file])\n\n    return { progress, url, error}\n}\n\nexport default useStorage;  \n"]},"metadata":{},"sourceType":"module"}