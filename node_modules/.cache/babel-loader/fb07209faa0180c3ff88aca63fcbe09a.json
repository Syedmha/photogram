{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // References\n    //const storageRef = projectStorage.ref(file.name);\n    const storageRef = photoStorage.ref(`uploads/${file.name}`).put(file); // this is async\n\n    storageRef.on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","photoStorage","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAGA,MAAMC,UAAU,GAAIC,IAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAG,MAAM;AACd;AACA;AACA,UAAMU,UAAU,GAAGC,YAAY,CAACC,GAAb,CAAkB,WAAUT,IAAI,CAACU,IAAK,EAAtC,EAAyCC,GAAzC,CAA6CX,IAA7C,CAAnB,CAHc,CAId;;AACAO,IAAAA,UAAU,CAACK,EAAX,CAAc,eAAd,EAAgCC,IAAD,IAAU;AACrC,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAd,MAAAA,WAAW,CAACY,UAAD,CAAX;AACH,KAHD,EAGIG,GAAD,IAAS;AACRb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACH,KALD,EAKG,YAAY;AACX,YAAMZ,GAAG,GAAG,MAAME,UAAU,CAACW,cAAX,EAAlB;AACAZ,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KARD;AASH,GAdQ,EAcN,CAACL,IAAD,CAdM,CAAT;AAgBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CAtBD;;GAAMJ,U;;AAwBN,eAAeA,UAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport {projectStorage} from '../firebase/config';\n\n\nconst useStorage = (file)=> {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect ( () => {\n        // References\n        //const storageRef = projectStorage.ref(file.name);\n        const storageRef = photoStorage.ref(`uploads/${file.name}`).put(file);\n        // this is async\n        storageRef.on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            setUrl(url);\n        })\n    }, [file]);\n\n    return { progress, url, error }\n}\n\nexport default useStorage;  \n"]},"metadata":{},"sourceType":"module"}