{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = collection => {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection).orderBy('createdAt', 'desc').onSnapshot(snap => {\n      let documents = [];\n      snap.forEach(doc => {\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsub();\n  }, [collection]);\n  return {\n    docs\n  };\n};\n\n_s(useFirestore, \"+T0lE56vJ9KU8atjOm2u+g1P1HQ=\");\n\nexport default useFirestore;","map":{"version":3,"sources":["/Users/syedmuzzammilhassanabedi/Documents/GitHub/photogram/src/hooks/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFirestore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEDC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,KAAK,GAAGL,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EACbI,OADa,CACL,WADK,EACQ,MADR,EAEbC,UAFa,CAEAC,IAAD,IAAU;AACnB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAChBF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAxB,SAAf;AACH,OAFD;AAGAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACH,KARa,CAAd;AAUA,WAAO,MAAMJ,KAAK,EAAlB;AACH,GAZQ,EAYN,CAACH,UAAD,CAZM,CAAT;AAeA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AAEC,CApBD;;GAAMF,Y;;AAsBN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n const [docs, setDocs] = useState([]);\n\nuseEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n    .orderBy('createdAt', 'desc')\n    .onSnapshot( (snap) => {\n        let documents = [];\n        snap.forEach(doc => {\n            documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n    });\n\n    return () => unsub();\n}, [collection])\n\n\nreturn { docs };\n\n}\n\nexport default useFirestore;"]},"metadata":{},"sourceType":"module"}